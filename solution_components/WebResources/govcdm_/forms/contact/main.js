var hppAdminForm = (function (exports) {
	'use strict';

	var pipe = function pipe() {
	  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
	    fns[_key] = arguments[_key];
	  }

	  return function (x) {
	    return fns.reduce(function (v, f) {
	      return f(v);
	    }, x);
	  };
	};

	var enableField = function enableField(ctrl) {
	  debugger;;
	  ctrl && ctrl.setDisabled(false);
	};

	var getFormContextControl = function getFormContextControl(fCon) {
	  return function (name) {
	    return fCon.getControl(name);
	  };
	};

	function createCommonjsModule(fn, basedir, module) {
		return module = {
			path: basedir,
			exports: {},
			require: function (path, base) {
				return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);
			}
		}, fn(module, module.exports), module.exports;
	}

	function commonjsRequire () {
		throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
	}

	var _typeof_1 = createCommonjsModule(function (module) {
	function _typeof(obj) {
	  "@babel/helpers - typeof";

	  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
	    module.exports = _typeof = function _typeof(obj) {
	      return typeof obj;
	    };
	  } else {
	    module.exports = _typeof = function _typeof(obj) {
	      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
	    };
	  }

	  return _typeof(obj);
	}

	module.exports = _typeof;
	});

	var LOCALHOST = 'http://localhost:3000';
	var WEBAPI = "".concat((typeof process === "undefined" ? "undefined" : _typeof_1(process)) === 'object' ? LOCALHOST : '', "/api/data/v9.0");
	var CLIENT_URL = (typeof location === "undefined" ? "undefined" : _typeof_1(location)) === 'object' && location.origin;
	var FORM_TYPE_UPDATE = 2;

	var formTypeExecution = function formTypeExecution(fType) {
	  return function (fCon) {
	    return function (func) {
	      return function (arg) {
	        return fCon.ui.getFormType() === fType && func(arg) || arg;
	      };
	    };
	  };
	};

	var formTypeUpdateExecution = formTypeExecution(FORM_TYPE_UPDATE);

	var enableOnUpdate = function enableOnUpdate(execContext) {
	  debugger;
	  var fCon = execContext.getFormContext();
	  var getFConCtrl = getFormContextControl(fCon);
	  var enableCtrlOnUpdate = formTypeUpdateExecution(fCon)(enableField);
	  pipe(getFConCtrl, enableCtrlOnUpdate)("emailaddress1");
	};

	exports.enableOnUpdate = enableOnUpdate;

	return exports;

}({}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5kZWJ1Zy5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NsaWVudC91dGlsaXR5L3BpcGUuanMiLCIuLi8uLi8uLi8uLi9zcmMvY2xpZW50L2NvbnRyb2wvZW5hYmxlRmllbGQuanMiLCIuLi8uLi8uLi8uLi9zcmMvY2xpZW50L2NvbnRyb2wvZ2V0Rm9ybUNvbnRleHRDb250cm9sLmpzIiwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdHlwZW9mLmpzIiwiLi4vLi4vLi4vLi4vc3JjL2NsaWVudC91dGlsaXR5L2NvbnN0cy5qcyIsIi4uLy4uLy4uLy4uL3NyYy9jbGllbnQvZm9ybS9mb3JtVHlwZUV4ZWN1dGlvbi5qcyIsIi4uLy4uLy4uLy4uL3NyYy9jbGllbnQvZm9ybS9mb3JtVHlwZVVwZGF0ZUV4ZWN1dGlvbi5qcyIsIi4uLy4uLy4uLy4uL3NyYy9jbGllbnQvZ292Y2RtXy9mb3Jtcy9jb250YWN0L2Zvcm0vZW5hYmxlT25VcGRhdGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGlwZSA9ICguLi5mbnMpID0+ICh4KSA9PiBmbnMucmVkdWNlKCh2LCBmKSA9PiBmKHYpLCB4KTtcclxuXHJcbmV4cG9ydCB7IHBpcGUgfTsiLCJjb25zdCBlbmFibGVGaWVsZCA9IChjdHJsKSA9PiB7ZGVidWdnZXI7IGN0cmwgJiYgY3RybC5zZXREaXNhYmxlZChmYWxzZSl9O1xyXG5cclxuZXhwb3J0IHsgZW5hYmxlRmllbGQgfTtcclxuIiwiY29uc3QgZ2V0Rm9ybUNvbnRleHRDb250cm9sID0gKGZDb24pID0+IChuYW1lKSA9PiBmQ29uLmdldENvbnRyb2wobmFtZSk7XHJcblxyXG5leHBvcnQgeyBnZXRGb3JtQ29udGV4dENvbnRyb2wgfTsiLCJmdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7XG5cbiAgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgICAgIHJldHVybiB0eXBlb2Ygb2JqO1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gX3R5cGVvZihvYmopO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF90eXBlb2Y7IiwiY29uc3QgQ0FOTk9UX1NFVF9GVVRVUkVfREFURSA9ICdDYW5ub3Qgc2V0IGZ1dHVyZSBkYXRlJztcclxuY29uc3QgQ0FOTk9UX1NFVF9GVVRVUkVfREFURV9JRCA9ICdDQU5OT1RfU0VUX0ZVVFVSRV9EQVRFJztcclxuXHJcbmNvbnN0IFJFQ09SRF9NVVNUX0JFX1NBVkVEID0gJ0Nhbm5vdCBzZXQgZmllbGQgdW50aWwgcmVjb3JkIHNhdmVkJztcclxuY29uc3QgUkVDT1JEX01VU1RfQkVfU0FWRURfSUQgPSAnUkVDT1JEX01VU1RfQkVfU0FWRUQnO1xyXG5cclxuY29uc3QgTE9DQUxIT1NUID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCc7XHJcbmNvbnN0IFdFQkFQSSA9IGAke3R5cGVvZihwcm9jZXNzKSA9PT0gJ29iamVjdCcgPyBMT0NBTEhPU1QgOiAnJ30vYXBpL2RhdGEvdjkuMGA7XHJcbmNvbnN0IFdIT0FNSSA9ICdXaG9BbUknO1xyXG5jb25zdCBHRVQgPSAnR0VUJztcclxuY29uc3QgUE9TVCA9ICdQT1NUJztcclxuY29uc3QgUEFUQ0ggPSAnUEFUQ0gnO1xyXG5jb25zdCBERUxFVEUgPSAnREVMRVRFJztcclxuY29uc3QgQ0xJRU5UX1VSTCA9IHR5cGVvZihsb2NhdGlvbikgPT09ICdvYmplY3QnICYmIGxvY2F0aW9uLm9yaWdpbjtcclxuY29uc3QgRk9STV9UWVBFX0NSRUFURSA9IDE7XHJcbmNvbnN0IEZPUk1fVFlQRV9VUERBVEUgPSAyO1xyXG5cclxuZXhwb3J0IHtcclxuICBDQU5OT1RfU0VUX0ZVVFVSRV9EQVRFLFxyXG4gIENBTk5PVF9TRVRfRlVUVVJFX0RBVEVfSUQsXHJcbiAgUkVDT1JEX01VU1RfQkVfU0FWRUQsXHJcbiAgUkVDT1JEX01VU1RfQkVfU0FWRURfSUQsXHJcbiAgTE9DQUxIT1NULFxyXG4gIFdFQkFQSSxcclxuICBXSE9BTUksXHJcbiAgR0VULFxyXG4gIFBPU1QsXHJcbiAgUEFUQ0gsXHJcbiAgREVMRVRFLFxyXG4gIENMSUVOVF9VUkwsXHJcbiAgRk9STV9UWVBFX0NSRUFURSxcclxuICBGT1JNX1RZUEVfVVBEQVRFXHJcbn07IiwiY29uc3QgZm9ybVR5cGVFeGVjdXRpb24gPSAgKGZUeXBlKSA9PiAoZkNvbikgPT4gKGZ1bmMpID0+IChhcmcpID0+IChmQ29uLnVpLmdldEZvcm1UeXBlKCkgPT09IGZUeXBlICYmIGZ1bmMoYXJnKSkgfHwgYXJnO1xyXG5cclxuZXhwb3J0IHsgZm9ybVR5cGVFeGVjdXRpb24gfTtcclxuIiwiaW1wb3J0IHsgRk9STV9UWVBFX1VQREFURSB9IGZyb20gXCIuLi91dGlsaXR5L2NvbnN0c1wiO1xyXG5pbXBvcnQgeyBmb3JtVHlwZUV4ZWN1dGlvbiB9IGZyb20gXCIuL2Zvcm1UeXBlRXhlY3V0aW9uXCI7XHJcblxyXG5jb25zdCBmb3JtVHlwZVVwZGF0ZUV4ZWN1dGlvbiA9IGZvcm1UeXBlRXhlY3V0aW9uKEZPUk1fVFlQRV9VUERBVEUpO1xyXG5cclxuZXhwb3J0IHsgZm9ybVR5cGVVcGRhdGVFeGVjdXRpb24gfTtcclxuIiwiaW1wb3J0IHsgcGlwZSB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlsaXR5L3BpcGVcIjtcclxuaW1wb3J0IHsgZW5hYmxlRmllbGQgfSBmcm9tIFwiLi4vLi4vLi4vLi4vY29udHJvbC9lbmFibGVGaWVsZFwiO1xyXG5pbXBvcnQgeyBnZXRGb3JtQ29udGV4dENvbnRyb2wgfSBmcm9tIFwiLi4vLi4vLi4vLi4vY29udHJvbC9nZXRGb3JtQ29udGV4dENvbnRyb2xcIjtcclxuaW1wb3J0IHsgZm9ybVR5cGVVcGRhdGVFeGVjdXRpb24gfSBmcm9tIFwiLi4vLi4vLi4vLi4vZm9ybS9mb3JtVHlwZVVwZGF0ZUV4ZWN1dGlvblwiO1xyXG5cclxuY29uc3QgZW5hYmxlT25VcGRhdGUgPSAoZXhlY0NvbnRleHQpID0+IHtcclxuICBkZWJ1Z2dlcjtcclxuICBjb25zdCBmQ29uID0gZXhlY0NvbnRleHQuZ2V0Rm9ybUNvbnRleHQoKTtcclxuICBjb25zdCBnZXRGQ29uQ3RybCA9IGdldEZvcm1Db250ZXh0Q29udHJvbChmQ29uKTtcclxuICBjb25zdCBlbmFibGVDdHJsT25VcGRhdGUgPSBmb3JtVHlwZVVwZGF0ZUV4ZWN1dGlvbihmQ29uKShlbmFibGVGaWVsZCk7XHJcblxyXG4gIHBpcGUoZ2V0RkNvbkN0cmwsIGVuYWJsZUN0cmxPblVwZGF0ZSkoXCJlbWFpbGFkZHJlc3MxXCIpO1xyXG59O1xyXG5cclxuZXhwb3J0IHsgZW5hYmxlT25VcGRhdGUgfTtcclxuIl0sIm5hbWVzIjpbInBpcGUiLCJmbnMiLCJ4IiwicmVkdWNlIiwidiIsImYiLCJlbmFibGVGaWVsZCIsImN0cmwiLCJzZXREaXNhYmxlZCIsImdldEZvcm1Db250ZXh0Q29udHJvbCIsImZDb24iLCJuYW1lIiwiZ2V0Q29udHJvbCIsIkxPQ0FMSE9TVCIsIldFQkFQSSIsInByb2Nlc3MiLCJDTElFTlRfVVJMIiwibG9jYXRpb24iLCJvcmlnaW4iLCJGT1JNX1RZUEVfVVBEQVRFIiwiZm9ybVR5cGVFeGVjdXRpb24iLCJmVHlwZSIsImZ1bmMiLCJhcmciLCJ1aSIsImdldEZvcm1UeXBlIiwiZm9ybVR5cGVVcGRhdGVFeGVjdXRpb24iLCJlbmFibGVPblVwZGF0ZSIsImV4ZWNDb250ZXh0IiwiZ2V0Rm9ybUNvbnRleHQiLCJnZXRGQ29uQ3RybCIsImVuYWJsZUN0cmxPblVwZGF0ZSJdLCJtYXBwaW5ncyI6Ijs7O0NBQUEsSUFBTUEsSUFBSSxHQUFHLFNBQVBBLElBQU87Q0FBQSxvQ0FBSUMsR0FBSjtDQUFJQSxJQUFBQSxHQUFKO0NBQUE7O0NBQUEsU0FBWSxVQUFDQyxDQUFEO0NBQUEsV0FBT0QsR0FBRyxDQUFDRSxNQUFKLENBQVcsVUFBQ0MsQ0FBRCxFQUFJQyxDQUFKO0NBQUEsYUFBVUEsQ0FBQyxDQUFDRCxDQUFELENBQVg7Q0FBQSxLQUFYLEVBQTJCRixDQUEzQixDQUFQO0NBQUEsR0FBWjtDQUFBLENBQWI7O0NDQUEsSUFBTUksV0FBVyxHQUFHLFNBQWRBLFdBQWMsQ0FBQ0MsSUFBRCxFQUFVO0NBQUM7Q0FBVUEsRUFBQUEsSUFBSSxJQUFJQSxJQUFJLENBQUNDLFdBQUwsQ0FBaUIsS0FBakIsQ0FBUjtDQUFnQyxDQUF6RTs7Q0NBQSxJQUFNQyxxQkFBcUIsR0FBRyxTQUF4QkEscUJBQXdCLENBQUNDLElBQUQ7Q0FBQSxTQUFVLFVBQUNDLElBQUQ7Q0FBQSxXQUFVRCxJQUFJLENBQUNFLFVBQUwsQ0FBZ0JELElBQWhCLENBQVY7Q0FBQSxHQUFWO0NBQUEsQ0FBOUI7Ozs7Ozs7Ozs7Ozs7Ozs7O0NDQUEsU0FBUyxPQUFPLENBQUMsR0FBRyxFQUFFO0NBQ3RCLEVBQUUseUJBQXlCLENBQUM7O0NBRTVCLEVBQUUsSUFBSSxPQUFPLE1BQU0sS0FBSyxVQUFVLElBQUksT0FBTyxNQUFNLENBQUMsUUFBUSxLQUFLLFFBQVEsRUFBRTtDQUMzRSxJQUFJLGNBQWMsR0FBRyxPQUFPLEdBQUcsU0FBUyxPQUFPLENBQUMsR0FBRyxFQUFFO0NBQ3JELE1BQU0sT0FBTyxPQUFPLEdBQUcsQ0FBQztDQUN4QixLQUFLLENBQUM7Q0FDTixHQUFHLE1BQU07Q0FDVCxJQUFJLGNBQWMsR0FBRyxPQUFPLEdBQUcsU0FBUyxPQUFPLENBQUMsR0FBRyxFQUFFO0NBQ3JELE1BQU0sT0FBTyxHQUFHLElBQUksT0FBTyxNQUFNLEtBQUssVUFBVSxJQUFJLEdBQUcsQ0FBQyxXQUFXLEtBQUssTUFBTSxJQUFJLEdBQUcsS0FBSyxNQUFNLENBQUMsU0FBUyxHQUFHLFFBQVEsR0FBRyxPQUFPLEdBQUcsQ0FBQztDQUNuSSxLQUFLLENBQUM7Q0FDTixHQUFHOztDQUVILEVBQUUsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7Q0FDdEIsQ0FBQzs7Q0FFRCxjQUFjLEdBQUcsT0FBTzs7O0NDVnhCLElBQU1FLFNBQVMsR0FBRyx1QkFBbEI7Q0FDQSxJQUFNQyxNQUFNLGFBQU0sUUFBT0MsT0FBUCwyQ0FBT0EsT0FBUCxPQUFvQixRQUFwQixHQUErQkYsU0FBL0IsR0FBMkMsRUFBakQsbUJBQVo7QUFDQSxDQUtBLElBQU1HLFVBQVUsR0FBRyxRQUFPQyxRQUFQLDJDQUFPQSxRQUFQLE9BQXFCLFFBQXJCLElBQWlDQSxRQUFRLENBQUNDLE1BQTdEO0FBQ0EsQ0FDQSxJQUFNQyxnQkFBZ0IsR0FBRyxDQUF6Qjs7Q0NmQSxJQUFNQyxpQkFBaUIsR0FBSSxTQUFyQkEsaUJBQXFCLENBQUNDLEtBQUQ7Q0FBQSxTQUFXLFVBQUNYLElBQUQ7Q0FBQSxXQUFVLFVBQUNZLElBQUQ7Q0FBQSxhQUFVLFVBQUNDLEdBQUQ7Q0FBQSxlQUFVYixJQUFJLENBQUNjLEVBQUwsQ0FBUUMsV0FBUixPQUEwQkosS0FBMUIsSUFBbUNDLElBQUksQ0FBQ0MsR0FBRCxDQUF4QyxJQUFrREEsR0FBM0Q7Q0FBQSxPQUFWO0NBQUEsS0FBVjtDQUFBLEdBQVg7Q0FBQSxDQUEzQjs7Q0NHQSxJQUFNRyx1QkFBdUIsR0FBR04saUJBQWlCLENBQUNELGdCQUFELENBQWpEOztLQ0VNUSxjQUFjLEdBQUcsU0FBakJBLGNBQWlCLENBQUNDLFdBQUQsRUFBaUI7Q0FDdEM7Q0FDQSxNQUFNbEIsSUFBSSxHQUFHa0IsV0FBVyxDQUFDQyxjQUFaLEVBQWI7Q0FDQSxNQUFNQyxXQUFXLEdBQUdyQixxQkFBcUIsQ0FBQ0MsSUFBRCxDQUF6QztDQUNBLE1BQU1xQixrQkFBa0IsR0FBR0wsdUJBQXVCLENBQUNoQixJQUFELENBQXZCLENBQThCSixXQUE5QixDQUEzQjtDQUVBTixFQUFBQSxJQUFJLENBQUM4QixXQUFELEVBQWNDLGtCQUFkLENBQUosQ0FBc0MsZUFBdEM7Q0FDRCxDQVBEOzs7Ozs7Ozs7OyJ9
